[
  
  {
    "title": "Obsidian Cheat Sheet",
    "url": "/posts/Obsidian-Cheat-Sheet/",
    "categories": "Cheat Sheets",
    "tags": "obsidian, cheat sheet, commands",
    "date": "2024-06-28 17:09:00 -0500",
    





    
    "snippet": "Quick TipsTo Search for a specific note: Use Ctrl + P (Cmd + P on Mac).For Internal Links: Use [[note name]] to create internal links to other notes.For External Links: Use [Text](URL) to create ex...",
    "content": "Quick TipsTo Search for a specific note: Use Ctrl + P (Cmd + P on Mac).For Internal Links: Use [[note name]] to create internal links to other notes.For External Links: Use [Text](URL) to create external links.For Bullet Points: Use -, *, or 1.For Headings: Use # (e.g., # Heading 1, ## Heading 2).For Code Blocks: Wrap text in triple backticks (``)`.For Embeds: Use ![[note name]] to embed another note in your current note.Markdown Cheat SheetQuick Overview&lt;/em&gt;# Heading 1## Heading 2--- Spacer  - Bullet Points- [x] Checklist**Bold***Italic****Italic Bold***==Highlights==```Coding Blocks```[[Links]](Sources)&gt; Quotes/ BlockquotesTable Cell A  |  Table Cell B----          |          ----Detailed Cheat Sheet&lt;/em&gt;# Heading 1# Heading 1Heading 2## Heading 2Line Break---   Bullet Points- Bullet   Checklist- [x] list Bold**text** Italic *text*Italic Bold***text*** ==Highlights====this text is highlighted==Coding BlocksBy putting 3 (`) signs before and after the code. [[Links]][[link]](sources)   Quotes/ Blockquotes&gt; this is a quote. Table Cell A  |  Table Cell B—-          |          —-Table Cell A  |  Table Cell B----          |          ----Shortcuts ⌨️General ShortcutsShortcut Key\t\t|\t\tFunctions:—————–:|—————–:Ctrl + S|Editor: Saves the fileCtrl + N| Creates a new noteCtrl + P| Open command palleteCtrl + O | Opens Quick SwitcherCtrl + Shift + F  | Search in all filesCtrl + G   | Opens graph viewCtrl +  Alt + ← | Navigate BackCtrl +  Alt + → | Navigate forthCtrl + F | Searches current fileCtrl + E | Toggle edit/preview modesCtrl + , | Open SettingsCtrl + Tab | Next tabCtrl + Shift + Tab | Previous tabAlt + Tab | Next AppAlt + Shift + Tab | Previous AppWin + Tab | Task ViewWin + Shift + Tab |  Next WindowEditing ShortcutsShortcut Key\t\t|\t\tFunctions:—————–:|—————–:Ctrl + B | Bold Selected TextCtrl + I | Italicize Selected TextCtrl + K | Insert External Link to Selected TextCtrl + ] | IndentCtrl + [ | UnindentCtrl + D |Delete current lineCtrl + V  | Duplicate current lineCtrl + Click | Open Note in Current Panel via Link\tCtrl + Shift + Click | Open Note in New Panel via Link\tCtrl + P (Cmd + P on Mac) | Quick SearchCtrl + N (Cmd + N on Mac) | New NoteCtrl + Shift + D (Cmd + Shift + D on Mac) | Create a Daily NoteCtrl + / (Cmd + / on Mac) | Toggle Command PaletteCtrl + E (Cmd + E on Mac) | Open Graph ViewCtrl + Click (Cmd + Click on Mac) | Open Link in New Pane"
  },
  
  {
    "title": "Proxmox Cheat Sheet",
    "url": "/posts/Proxmox-Commands/",
    "categories": "Cheat Sheets",
    "tags": "proxmox, cheat sheet, commands",
    "date": "2024-06-24 19:31:00 -0500",
    





    
    "snippet": "VM Management            Command      Command Description                  qm list      list VMs              qm create &lt;vm&gt;      Create or restore a virtual machine.              qm start &l...",
    "content": "VM Management            Command      Command Description                  qm list      list VMs              qm create &lt;vm&gt;      Create or restore a virtual machine.              qm start &lt;vm&gt;      Start a VM              qm suspend &lt;vm&gt;      Suspend virtual machine.              qm shutdown &lt;vm&gt;      Shutdown a VM              qm reboot &lt;vm&gt;      Reboot a VM              qm reset &lt;vm&gt;      Reset a VM              qm stop &lt;vm&gt;      Stop a VM              qm destroy &lt;vm&gt;      Destroy the VM and all used/owned volumes.              qm monitor &lt;vm&gt;      Enter Qemu Monitor interface.              qm pending &lt;vm&gt;      Get the virtual machine configuration with both current and pending values.              qm sendkey &lt;vm&gt; &lt;key_event&gt;      Send key event to virtual machine.              qm showcmd &lt;vm&gt;      Show command line used to start the VM (debug info).              qm unlock &lt;vm&gt;      Unlock the VM              qm clone &lt;vm&gt; &lt;new_vm&gt;      Clone a VM              qm migrate &lt;vm&gt; &lt;node&gt;      Migrate a VM              qm status &lt;vm&gt;      Show VM status              qm template &lt;vm&gt;      Create a Template              qm set &lt;vm&gt;      Set virtual machine options (synchronous API)      Cloudinit            Command      Command Description                  qm cloudinit dump &lt;vm&gt; &lt;type&gt;      Get automatically generated cloudinit config.              qm cloudinit pending &lt;vm&gt;      Get the cloudinit configuration with both current and pending values.              qm cloudinit update &lt;vm&gt;      Regenerate and change cloudinit config drive.      Disk            Command      Command Description                  qm disk import &lt;vm&gt; &lt;source&gt; &lt;storage      Import an external disk image as an unused disk in a VM.              qm disk move &lt;vm&gt; &lt;disk&gt;      Move volume to different storage or to a different VM.              qm disk rescan      Rescan all storages and update disk sizes and unused disk images.              qm disk resize &lt;vm&gt; &lt;disk&gt; &lt;size&gt;      Extend volume size.              qm disk unlink &lt;vm&gt; --IDLIST &lt;string&gt;      Unlink/delete disk images.              qm rescan      Rescan volumes.              qemu-img convert &lt;qcow2&gt; &lt;raw&gt;      Convert qcow2 to raw              qemu-img convert -p -O qcow2 &lt;raw&gt; &lt;qcow2&gt;      Convert back to qcow2      Snapshot            Command      Command Description                  qm listsnapshot &lt;vm&gt;      List all snapshots.              qm snapshot &lt;vm&gt; &lt;snapshot&gt;      Snapshot a VM.              qm delsnapshot &lt;vm&gt; &lt;snapshot&gt;      Delete a snapshot.              qm rollback &lt;vm&gt; &lt;snapshot&gt;      Rollback a snapshot.              qm terminal &lt;vm&gt;      Open a terminal using a serial device.              qm vncproxy &lt;vm&gt;      Proxy VM VNC traffic to stdin/stdout.      Misc            Command      Command Description                  qm guest cmd &lt;vm&gt; &lt;command&gt;      Execute Qemu Guest Agent commands.              qm guest exec &lt;vm&gt;      Executes the given command via the guest agent.              qm guest exec-status &lt;vm&gt; &lt;pid&gt;      Gets the status of the given pid started by the guest-agent.              qm guest passwd &lt;vm&gt; &lt;user&gt;      Sets the password for the given user to the given password.      PV, VG, LV Management            Command      Command Description                  pvcreate &lt;disk&gt;      Create a PV              pvremove &lt;disk&gt;      Remove a PV              pvs      List all PVs              vgcreate &lt;vg&gt; &lt;disk&gt;      Create a VG              vgremove &lt;vg&gt;      Remove a VG              vgs      List all VGs              lvcreate -L LV-SIZE -n &lt;lv&gt; &lt;vg&gt;      Create a LV              lvremove &lt;vg&gt;/&lt;lv&gt;      Remove a LV              lvs      List all LVs      Storage Management            Command      Command Description                  pvesm add TYPE &lt;storage&gt;      Create a new storage              pvesm alloc &lt;storage&gt; &lt;vm&gt; &lt;file&gt; &lt;size&gt;      Allocate disk images              pvesm free &lt;volume&gt;      Delete volume              pvesm remove &lt;storage&gt;      Delete storage configuration              pvesm list &lt;storage&gt;      List storage content              pvesm lvmscan      An alias for pvesm scan lvm              pvesm lvmthinscan      An alias for pvesm scan lvmthin              pvesm scan lvm      List local LVM volume groups              pvesm scan lvmthin VG      List local LVM Thin Pools              pvesm status      Get status for all datastores      Template Management            Command      Command Description                  pveam available      List all templates              pveam list &lt;storage&gt;      List all templates              pveam download &lt;storage&gt; &lt;template&gt;      Download appliance templates              pveam remove &lt;template&gt;      Remove a template              pveam update      Update Container Template Database      Container Management            Command      Command Description                  pct list      List containers              pct create &lt;vm&gt; OSTEMPLATE      Create or restore a container              pct start &lt;vm&gt;      Start the container              pct clone &lt;vm&gt; &lt;new_vm&gt;      Create a container clone/copy              pct suspend &lt;vm&gt;      Suspend the container. This is experimental.              pct resume &lt;vm&gt;      Resume the container              pct stop &lt;vm&gt;      Stop the container. This will abruptly stop all processes running in the container.              pct shutdown &lt;vm&gt;      Shutdown the container. This will trigger a clean shutdown of the container.              pct destroy &lt;vm&gt;      Destroy the container (also delete all uses files)              pct status &lt;vm&gt;      Show CT status              pct migrate &lt;vm&gt; &lt;target&gt;      Migrate the container to another node. Creates a new migration task.              pct config &lt;vm&gt;      Get container configuration              pct cpusets      Print the list of assigned CPU sets              pct pending &lt;vm&gt;      Get container configuration, including pending changes              pct reboot &lt;vm&gt;      Reboot the container by shutting it down and starting it again. Applies pending changes.              pct restore &lt;vm&gt; &lt;template&gt;      Create or restore a container              pct set &lt;vm&gt;      Set container options              pct template &lt;vm&gt;      Create a Template              pct unlock &lt;vm&gt;      Unlock the VM      Container Disks            Command      Command Description                  pct df &lt;vm&gt;      Get the container’s current disk usage              pct fsck &lt;vm&gt;      Run a filesystem check (fsck) on a container volume              pct fstrim &lt;vm&gt;      Run fstrim on a chosen CT and its mountpoints              pct mount &lt;vm&gt;      Mount the container’s filesystem on the host              pct move-volume &lt;vm&gt; &lt;volume&gt;      Move a rootfs-/mp-volume to a different storage or to a different container              pct unmount &lt;vm&gt;      Unmount the container’s filesystem              pct resize &lt;vm&gt; &lt;disk&gt; &lt;size&gt;      Resize a container mount point              pct rescan      Rescan all storages and update disk sizes and unused disk images              pct enter &lt;vm&gt;      Connect to container              pct console &lt;vm&gt;      Launch a console for the specified container              pct exec &lt;vm&gt;      Launch a command inside the specified container              pct pull &lt;vm&gt; &lt;source&gt; &lt;destination&gt;      Copy a file from the container to the local system              pct push &lt;vm&gt; &lt;source&gt; &lt;destination&gt;      Copy a local file to the container      Web GUI            Command      Command Description                  service pveproxy restart      Restart the Proxmox web GUI      "
  },
  
  {
    "title": "Terraform Cheat Sheet",
    "url": "/posts/Terraform-Commands/",
    "categories": "Cheat Sheets",
    "tags": "terraform, cheat sheet, commands",
    "date": "2024-06-24 12:51:00 -0500",
    





    
    "snippet": "Format and Validate            Command      Description                  terraform fmt      Reformat your configuration in the standard style              terraform validate      Check whether the ...",
    "content": "Format and Validate            Command      Description                  terraform fmt      Reformat your configuration in the standard style              terraform validate      Check whether the configuration is valid      Initialize Working Directory            Command      Description                  terraform init      Prepare your working directory for other commands      Plan, Deploy and Cleanup            Command      Description                  terraform apply --auto-approve      Create or update infrastructure without confirmation prompt              terraform destroy --auto-approve      Destroy previously-created infrastructure without confirmation prompt              terraform plan -out plan.out      Output the deployment plan to plan.out              terraform apply plan.out      Use the plan.out to deploy infrastructure              terraform plan -destroy      Outputs a destroy plan              terraform apply -target=aws_instance.myinstance      Only apply/deploy changes to targeted resource              terraform apply -var myregion=us-east-1      Pass a variable via CLI while applying a configuration              terraform apply -lock=true      Lock the state file so it can’t be modified              terraform apply refresh=false      Do not reconcile state file with real-world resources              terraform apply --parallelism=5      Number of simultaneous resource operations              terraform refresh      Reconcile the state in Terraform state file with real-world resources              terraform providers      Get informatino about providers used in the current configuration      Workspaces            Command      Description                  terraform workspace new &lt;workspace&gt;      Create a new workspace              terraform workspace select default      Change to a workspace              terraform workspace list      List all workspaces      State Manipulation            Command      Description                  terraform state show aws_instance.myinstance      Show details stored in the Terraform state file              terraform state pull &gt; terraform.tfstate      Output Terraform state to a file              terraform state mv aws_iam_role.my_ssm_role module.mymodule      Move a resource tracked via state to different module              terraform state replace-provider hashicorp/aws registry.custom.com/aws      Replace an existing provider with another              terraform state list      List all resources tracked in the Terraform state file              terraform state rm aws_instance.myinstance      Unmanage a resource, delete it from the Terraform state file      Import and Outputs            Command      Description                  terraform import &lt;resource_type&gt;.&lt;resource&gt; &lt;id&gt;      Import a Resource              terraform output      List all outputs              terraform output &lt;output&gt;      List a specific output              terraform output -json      List all outputs in JSON format      Terraform Cloud            Command      Description                  terraform login      Login to Terraform Cloud with an API token              terraform logout      Logout from Terraform Cloud      "
  },
  
  {
    "title": "Kubectl Cheat Sheet",
    "url": "/posts/Kubectl-Commands/",
    "categories": "Cheat Sheets",
    "tags": "kubectl, cheat sheet, commands",
    "date": "2024-06-24 12:51:00 -0500",
    





    
    "snippet": "Contexts and Configuration            Command      Description                  kubectl config view      Show the current kubeconfig file              kubectl config get-contexts      List all cont...",
    "content": "Contexts and Configuration            Command      Description                  kubectl config view      Show the current kubeconfig file              kubectl config get-contexts      List all contexts in the kubeconfig file              kubectl config current-context      Show the current context              kubectl config use-context &lt;context&gt;      Change the current context              kubectl config set-context &lt;context&gt; --namespace=&lt;namespace&gt;      Set the namespace for a context              kubectl config set-context &lt;context&gt; --cluster=&lt;cluster&gt;      Set the cluster for a context              kubectl config set-context &lt;context&gt; --user=&lt;user&gt;      Set the user for a context              kubectl config set-context &lt;context&gt; --namespace=&lt;namespace&gt; --cluster=&lt;cluster&gt; --user=&lt;user&gt;      Set all context properties      Cluster Management            Command      Description                  kubectl cluster-info      Display addresses of the master and services              kubectl get nodes      List all nodes in the cluster              kubectl get pods      List all pods in the cluster              kubectl get services      List all services in the cluster              kubectl get deployments      List all deployments in the cluster              kubectl get namespaces      List all namespaces in the cluster              kubectl get events      List all events in the cluster      Resource Management            Command      Description                  kubectl apply -f &lt;file&gt;      Apply a configuration file              kubectl delete -f &lt;file&gt;      Delete a configuration file              kubectl get &lt;resource&gt;      List all resources of a type              kubectl describe &lt;resource&gt; &lt;name&gt;      Describe a resource              kubectl edit &lt;resource&gt; &lt;name&gt;      Edit a resource              kubectl exec -it &lt;pod&gt; -- &lt;command&gt;      Execute a command in a pod      Pod Management            Command      Description                  kubectl run &lt;name&gt; --image=&lt;image&gt;      Create a new pod              kubectl delete pod &lt;name&gt;      Delete a pod              kubectl get pod &lt;name&gt;      Get details of a pod              kubectl describe pod &lt;name&gt;      Describe a pod              kubectl logs &lt;name&gt;      Show logs of a pod              kubectl exec -it &lt;name&gt; -- /bin/bash      Execute a command in a pod              kubectl cp &lt;pod&gt;:&lt;source&gt; &lt;destination&gt;      Copy files from a pod              kubectl top node      Show metrics for all nodes              kubectl top pod      Show metrics for all pods              kubectl top pod &lt;name&gt;      Show metrics for a specific pod      Service Management            Command      Description                  kubectl expose pod &lt;name&gt; --port=444 --target-port=555      Expose a pod as a service              kubectl delete service &lt;name&gt;      Delete a service              kubectl get service &lt;name&gt;      Get details of a service              kubectl describe service &lt;name&gt;      Describe a service      Deployment Management            Command      Description                  kubectl create deployment &lt;name&gt; --image=&lt;image&gt;      Create a new deployment              kubectl delete deployment &lt;name&gt;      Delete a deployment              kubectl get deployment &lt;name&gt;      Get details of a deployment              kubectl describe deployment &lt;name&gt;      Describe a deployment              kubectl scale deployment &lt;name&gt; --replicas=3      Scale a deployment to 3 replicas              kubectl rollout status deployment/&lt;name&gt;      Check the status of a deployment rollout              kubectl rollout history deployment/&lt;name&gt;      Show the history of a deployment rollout              kubectl rollout undo deployment/&lt;name&gt;      Rollback a deployment to the previous version              kubectl rollout undo deployment/&lt;name&gt; --to-revision=1      Rollback a deployment to a specific revision      Namespace Management            Command      Description                  kubectl create namespace &lt;name&gt;      Create a new namespace              kubectl delete namespace &lt;name&gt;      Delete a namespace              kubectl get namespace &lt;name&gt;      Get details of a namespace              kubectl describe namespace &lt;name&gt;      Describe a namespace      "
  },
  
  {
    "title": "Helm Cheat Sheet",
    "url": "/posts/Helm-Commands/",
    "categories": "Cheat Sheets",
    "tags": "helm, cheat sheet, commands",
    "date": "2024-06-24 12:51:00 -0500",
    





    
    "snippet": "Repository Management            Command      Description                  helm repo list      List Helm repositories              helm repo update      Update list of Helm charts from repositories...",
    "content": "Repository Management            Command      Description                  helm repo list      List Helm repositories              helm repo update      Update list of Helm charts from repositories      Chart Management            Command      Description                  helm search      List all installed charts              helm search &lt;chart&gt;      Search for a chart              helm ls      List all installed Helm charts              helm ls --deleted      List all deleted Helm charts              helm ls --all      List installed and deleted Helm charts              helm inspect values &lt;repo&gt;/&lt;chart&gt;      Inspect the variables in a chart      Install/Delete Helm Charts            Command      Description                  helm install --name &lt;name&gt; &lt;repo&gt;/&lt;chart&gt;      Install a Helm chart              helm install --name &lt;name&gt; --values &lt;VALUES.YML&gt; &lt;repo&gt;/&lt;chart&gt;      Install a Helm chart and override variables              helm status &lt;name&gt;      Show status of Helm chart being installed              helm delete --purge &lt;name&gt;      Delete a Helm chart      Upgrading Helm Charts            Command      Description                  helm get values &lt;name&gt;      Return the variables for a release              helm upgrade --values &lt;file&gt; &lt;name&gt; &lt;repo&gt;/&lt;chart&gt;      Upgrade the chart or variables in a release              helm history &lt;name&gt;      List release numbers              helm rollback &lt;name&gt; 1      Rollback to a previous release number      Creating Helm Charts            Command      Description                  helm create &lt;name&gt;      Create a blank chart              helm lint &lt;name&gt;      Lint the chart              helm package &lt;name&gt;      Package the chart into foo.tgz              helm dependency update      Install chart dependencies      "
  },
  
  {
    "title": "Docker Cheat Sheet",
    "url": "/posts/Docker-Commands/",
    "categories": "Cheat Sheets",
    "tags": "docker, cheat sheet, commands",
    "date": "2024-06-24 12:50:00 -0500",
    





    
    "snippet": "Running Containers            COMMAND      DESCRIPTION                  docker run &lt;image&gt;      Start a new container from an image              docker run -it &lt;image&gt;      Start a new ...",
    "content": "Running Containers            COMMAND      DESCRIPTION                  docker run &lt;image&gt;      Start a new container from an image              docker run -it &lt;image&gt;      Start a new container in interactive mode              docker run --rm &lt;image&gt;      Start a new container and remove it when it exits              docker create &lt;image&gt;      Create a new container              docker start &lt;container&gt;      Start a container              docker stop &lt;container&gt;      Graceful stop a container              docker kill &lt;container&gt;      Kill (SIGKILL) a container              docker restart &lt;container&gt;      Graceful stop and restart a container              docker pause &lt;container&gt;      Suspend a container              docker unpause &lt;container&gt;      Resume a container              docker rm &lt;container&gt;      Destroy a container      Container Bulk Management            COMMAND      DESCRIPTION                  docker stop $(docker ps -q)      To stop all the running containers              docker stop $(docker ps -a -q)      To stop all the stopped and running containers              docker kill $(docker ps -q)      To kill all the running containers              docker kill $(docker ps -a -q)      To kill all the stopped and running containers              docker restart $(docker ps  -q)      To restart all  running containers              docker restart $(docker ps -a -q)      To restart all the stopped and running containers              docker rm $(docker ps  -q)      To destroy all running containers              docker rm $(docker ps -a -q)      To destroy all the stopped and running containers              docker pause $(docker ps  -q)      To pause all  running containers              docker pause $(docker ps -a -q)      To pause all the stopped and running containers              docker start $(docker ps  -q)      To start all  running containers              docker start $(docker ps -a -q)      To start all the stopped and running containers              docker rm -vf $(docker ps -a -q)      To delete all containers including its volumes use              docker rmi -f $(docker images -a -q)      To delete all the images              docker system prune      To delete all dangling and unused images, containers, cache and volumes              docker system prune -a      To delete all used and unused images              docker system prune --volumes      To delete all docker volumes      Inspect Containers            COMMAND      DESCRIPTION                  docker ps      List running containers              docker ps --all      List all containers, including stopped              docker logs &lt;container&gt;      Show a container output              docker logs -f &lt;container&gt;      Follow a container output              docker top &lt;container&gt;      List the processes running in a container              docker diff      Show the differences with the image (modified files)              docker inspect      Show information of a container (json formatted)      Executing Commands            COMMAND      DESCRIPTION                  docker attach &lt;container&gt;      Attach to a container              docker cp &lt;container&gt;:&lt;container-path&gt; &lt;host-path&gt;      Copy files from the container              docker cp &lt;host-path&gt; &lt;container&gt;:&lt;container-path&gt;      Copy files into the container              docker export &lt;container&gt;      Export the content of the container (tar archive)              docker exec &lt;container&gt;      Run a command inside a container              docker exec -it &lt;container&gt; /bin/bash      Open an interactive shell inside a container (there is no bash in some images, use /bin/sh)              docker wait &lt;container&gt;      Wait until the container terminates and return the exit code      Images            COMMAND      DESCRIPTION                  docker image ls      List all local images              docker history &lt;image&gt;      Show the image history              docker inspect &lt;image&gt;      Show information (json formatted)              docker tag &lt;image&gt; &lt;tag&gt;      Tag an image              docker commit &lt;container&gt; &lt;image&gt;      Create an image (from a container)              docker import &lt;url&gt;      Create an image (from a tarball)              docker rmi &lt;image&gt;      Delete images              docker pull &lt;user&gt;/&lt;repository&gt;:&lt;tag&gt;      Pull an image from a registry              docker push &lt;user&gt;/&lt;repository&gt;:&lt;tag&gt;      Push and image to a registry              docker search &lt;test&gt;      Search an image on the official registry              docker login      Login to a registry              docker logout      Logout from a registry              docker save &lt;user&gt;/&lt;repository&gt;:&lt;tag&gt;      Export an image/repo as a tarball              docker load      Load images from a tarball      Volumes            COMMAND      DESCRIPTION                  docker volume ls      List all vol1umes              docker volume create &lt;volume&gt;      Create a volume              docker volume inspect &lt;volume&gt;      Show information (json formatted)              docker volume rm &lt;volume&gt;      Destroy a volume              docker volume ls --filter=\"dangling=true\"      List all dangling volumes (not referenced by any container)              docker volume prune      Delete all volumes (not referenced by any container)              docker run --rm --volumes-from &lt;container&gt; -v $(pwd):/backup busybox tar cvfz /backup/backup.tar &lt;container-path&gt;      Backup a container              docker run --rm --volumes-from &lt;container&gt; -v $(pwd):/backup busybox sh -c \"cd &lt;container-path&gt; &amp;&amp; tar xvf /backup/backup.tar --strip 1\"      Restore a container from backup      "
  },
  
  {
    "title": "Git Cheat Sheet",
    "url": "/posts/Git-Commands/",
    "categories": "Cheat Sheets",
    "tags": "git, cheat sheet, commands",
    "date": "2024-06-24 12:25:00 -0500",
    





    
    "snippet": "Repository Management            Command      Description                  git init      Initialize a new Git repository              git clone &lt;url&gt;      Clone a remote repository           ...",
    "content": "Repository Management            Command      Description                  git init      Initialize a new Git repository              git clone &lt;url&gt;      Clone a remote repository              git status      Show the working tree status              git add &lt;file&gt;      Add a file to the staging area              git commit -m &lt;message&gt;      Commit changes to the repository              git push      Push changes to the remote repository              git pull      Pull changes from the remote repository              git fetch      Fetch changes from the remote repository              git merge &lt;branch&gt;      Merge a branch into the current branch              git branch      List all branches              git branch &lt;branch&gt;      Create a new branch              git checkout &lt;branch&gt;      Switch to a branch              git checkout -b &lt;branch&gt;      Create and switch to a new branch              git branch -d &lt;branch&gt;      Delete a branch              git log      Show commit logs              git diff      Show changes between commits              git blame &lt;file&gt;      Show who changed each line in a file              git reflog      Show a log of changes to HEAD              git reset --hard &lt;commit&gt;      Reset the repository to a commit              git revert &lt;commit&gt;      Revert a commit              git stash      Stash changes in the working directory              git stash pop      Apply stashed changes to the working directory              git tag &lt;tag&gt;      Create a tag for a commit      Configuration            Command      Description                  git config --global user.name &lt;user&gt;      Set the user name for Git              git config --global user.email &lt;email&gt;      Set the user email for Git              git config --global core.editor &lt;editor&gt;      Set the default text editor for Git              git config --global color.ui auto      Enable colored output for Git      Remote Repositories            Command      Description                  git remote add &lt;repository&gt; &lt;url&gt;      Add a remote repository              git remote -v      List remote repositories              git remote show &lt;repository&gt;      Show information about a remote repository              git remote rename &lt;repository&gt; &lt;new_repository&gt;      Rename a remote repository              git remote remove &lt;repository&gt;      Remove a remote repository      "
  },
  
  {
    "title": "Kubernetes NFS Mount Setup for Persistent Storage",
    "url": "/posts/Kubernetes-NFS-Share/",
    "categories": "Kubernetes, NFS",
    "tags": "kubernetes, nfs, persistent storage",
    "date": "2024-06-23 19:13:00 -0500",
    





    
    "snippet": "Requirements  Install nfs-common on all kubernetes nodes     sudo apt install -y nfs-common            Install NFS CSI driver    An NFS share setup from something like TrueNAS, Synology, etc.Setup ...",
    "content": "Requirements  Install nfs-common on all kubernetes nodes     sudo apt install -y nfs-common            Install NFS CSI driver    An NFS share setup from something like TrueNAS, Synology, etc.Setup persistent volume  Create a yaml file called nfs-pv.yaml with the following:     apiVersion: v1 kind: PersistentVolume metadata: name: nfs spec: capacity:     storage: 20Gi accessModes:     - ReadWriteMany storageClassName: nfs nfs:     server: 192.168.1.24            # IP of NFS Server     path: \"/mnt/TREPOOL/TRESHARE\"   # NFS mount path         Apply file     kubectl apply -f nfs-pv.yaml      Setup persistent volume claim  Create a yaml file called nfs-pvc.yaml with the following:     apiVersion: v1 kind: PersistentVolumeClaim metadata: name: nfs spec: accessModes:     - ReadWriteMany storageClassName: nfs resources:     requests:     storage: 20Gi        Apply file     kubectl apply -f nfs-pvc.yaml      Test with NGINX web server  Create a yaml file called nfs-web.yaml with the following:     apiVersion: apps/v1 kind: Deployment metadata: name: nfs-web spec: replicas: 1 selector:     matchLabels:      app: nfs-web template:     metadata:     labels:         app: nfs-web     spec:     containers:     - name: nfs-web         image: nginx         ports:         - name: web             containerPort: 80         volumeMounts:         - name: nfs             mountPath: /usr/share/nginx/html    # NFS path in pod     volumes:     - name: nfs         persistentVolumeClaim:         claimName: nfs        Apply file     kubectl apply -f nfs-web.yaml        Get the name of the pod. eg: nfs-web-7bc97bcf48-5brq6     kubectl get pods        Exec into the pod to verify nfs is mounted and files are available.     kubectl exec -it nfs-web-7bc97bcf48-5brq6 -- /bin/bash        cd into NFS path from the deployment and list the directory to verify files.     cd /usr/share/nginx/html      "
  },
  
  {
    "title": "My Homelab",
    "url": "/posts/My-Homelab/",
    "categories": "Homelab, Overview",
    "tags": "homelab",
    "date": "2024-06-20 12:00:00 -0500",
    





    
    "snippet": "A lot of years, money and sleepless nights later, this homelab has gone through two or three major iterationsWhats in the Rack:  UDM-PRO - networking and security cams for inside and outside my hou...",
    "content": "A lot of years, money and sleepless nights later, this homelab has gone through two or three major iterationsWhats in the Rack:  UDM-PRO - networking and security cams for inside and outside my house.  USW-16-POE  TP-Link 24 port gigabyte switch  Patchbox Plus + Cat 6a  48-Port blank Keystone  CyberPower Pure Sine Wave UPS  Kinan 8-port KVM console  Supermicro 847 36 Bay chassis for TrueNAS Scale 12 x 10 TB (2 x RaidZ2)12 x 14 TB (2 x RaidZ2)6 x 1TB SSD (RaidZ2)Xenon W-1290P | 128 GB DDR4-3200 ECC RAMServers:Running 5 servers in a High Available cluster All are from old gaming rigs. Every 3 years or so I buy a new gaming rig and toss the previous moba, ram, cpu, and psu into Rosewill 4U chassis.Server 1: i7-12700K | GTX 1080TIServer 2: i7-9700K | GTX 980TIServer 3: i7-6700KServer 4: i7-4790KServer 5: AMD Ryzen 5 3600As you can see from my Homepage dashboard, I run a bunch of services across multiple VM’s with high availability. If I ever take any server down, the VM’s are spun up on the remaining nodes in the cluster. Here are some of my services starting with the coolest.ServiesClusterplex: I took plex onestep further and deployed clusterplex by pabloromeo on github. This amazing developer created add-on is a way to distribute transcode jobs from one Plex server across multiple VM’s or workers. This has allowed me to scale out plex without ever taking up too much processing on any given server/VM. It is meant for Kubernetes and docker swarm but can be configured to work in normal docker containers.Also using Tautulli for better metrics and observability of PlexWazuh: A wonderful SIEM solution I have deployed on all servers and computers on the network with active response rules, alerts to discord and vulnerability monitoring.Uptime-Kuma: Super easy and quick uptime monitor for all services with notifications linked to discord for any outages.Not shown on dashboard: Pterodactyl Game serverNGINX Proxy Manager: Reverse proxy for ip’sAutomated eBook and Audiobook library using Calibre, Readarr and Calibre-Web. (Account with myanonymouse)Vaultwarden: selfhosted BitwardenImmich: Photo/Video backup Solution"
  }
  
]

